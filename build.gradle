buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

plugins {
    id 'java-library'
    id 'org.spongepowered.plugin' version '0.8.1'
    id 'net.minecrell.vanillagradle.server' version '2.2-5'
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'signing'
}

apply plugin: 'org.spongepowered.mixin'

defaultTasks 'clean', 'licenseFormat', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

archivesBaseName = project.name.toLowerCase()
version = "${project.version}-r${project.apiVersion.split("-")[0]}"

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    api "org.spongepowered:spongeapi:${project.apiVersion}"
    api "org.spongepowered:mixin:${project.mixinVersion}"
}

license {
    ext.name = project.name
    ext.organization = organization
    ext.url = url
    header rootProject.file('HEADER.txt')
    ignoreFailures true
    strictCheck true
    include '**/*.java'
}

build.dependsOn licenseFormat

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }
    header = rootProject.file('HEADER.txt')
    ignoreFailures = false
    strictCheck = true
    include '**/*.java'
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

minecraft {
    version = '1.11.2'
    mappings = 'snapshot_20170210'
    makeObfSourceJar = false
}

sourceSets {
    main {
        refMap = "mixins.timewarp.refmap.json"
    }
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'mixins.timewarp.json',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true'
    )
}

idea {
    module {
        inheritOutputDirs = true
    }
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
